{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\WAIT-FOR-ME-main\\\\clinet\\\\src\\\\YIXUAN\\\\stores\\\\Catagory.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport React, { useState } from \"react\"; //本標籤管理\n//1.{allData:從index拿到的“全部”json資料}{setData:改變input的data}\n//2.狀態[catagories]把標籤分類(不重複歸類)\n//3.產生button\n//4.點選button分類時，setData(隸屬於index的狀態)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Catagory(_ref) {\n  _s();\n\n  let {\n    allData,\n    setData\n  } = _ref;\n  const allCategories = [\"all\", ...new Set(allData.map(v => v.category))]; //把'all'放第一位，後面複製陣列\n  // var b = new Set(a.map((v) => v.category));\n  //new Set(v);(v是陣列，是獨立的，有相同值會被濾掉\n\n  const [catagories, setCatagory] = useState(allCategories); //純粹就是給buttom值\n\n  const filterItem = category => {\n    //(category)從category的button來的，是字串喔\n    if (category === \"all\") {\n      setData(allData);\n      return;\n    } //category代表category標籤給的input\n\n\n    const newDate = allData.filter(v => v.category === category); //v.category(allData的一筆資料裏面的category屬性)等於category(我們給的參數)->會被濾“出來”\n\n    setData(newDate); //把data透過setData改變了\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: catagories.map((v, i) => {\n            return /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-success\",\n              onClick: () => filterItem(v),\n              children: v\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Catagory, \"8bjtglOPvRh3gN/3/m3OFr5S0wI=\");\n\n_c = Catagory;\nexport default Catagory;\n\nvar _c;\n\n$RefreshReg$(_c, \"Catagory\");","map":{"version":3,"sources":["C:/Users/User/Desktop/WAIT-FOR-ME-main/clinet/src/YIXUAN/stores/Catagory.jsx"],"names":["Button","Container","Row","Col","React","useState","Catagory","allData","setData","allCategories","Set","map","v","category","catagories","setCatagory","filterItem","newDate","filter","i"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,SAAjB,EAA4BC,GAA5B,EAAiCC,GAAjC,QAA4C,iBAA5C;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;AACA;AACA;AACA;AACA;;;;;AAEA,SAASC,QAAT,OAAyC;AAAA;;AAAA,MAAvB;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAuB;AAEvC,QAAMC,aAAa,GAAG,CAAC,KAAD,EAAQ,GAAG,IAAIC,GAAJ,CAAQH,OAAO,CAACI,GAAR,CAAaC,CAAD,IAAOA,CAAC,CAACC,QAArB,CAAR,CAAX,CAAtB,CAFuC,CAGvC;AACA;AACA;;AACA,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BV,QAAQ,CAACI,aAAD,CAA1C,CANuC,CAMmB;;AAE1D,QAAMO,UAAU,GAAIH,QAAD,IAAc;AAC/B;AACA,QAAIA,QAAQ,KAAK,KAAjB,EAAwB;AACtBL,MAAAA,OAAO,CAACD,OAAD,CAAP;AACA;AACD,KAL8B,CAM/B;;;AACA,UAAMU,OAAO,GAAGV,OAAO,CAACW,MAAR,CAAgBN,CAAD,IAAOA,CAAC,CAACC,QAAF,KAAeA,QAArC,CAAhB,CAP+B,CAQ/B;;AACAL,IAAAA,OAAO,CAACS,OAAD,CAAP,CAT+B,CASb;AACnB,GAVD;;AAYA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAA,6BACE,QAAC,GAAD;AAAA,+BACE,QAAC,GAAD;AAAA,oBACGH,UAAU,CAACH,GAAX,CAAe,CAACC,CAAD,EAAIO,CAAJ,KAAU;AACxB,gCACE,QAAC,MAAD;AACE,cAAA,OAAO,EAAC,iBADV;AAGE,cAAA,OAAO,EAAE,MAAMH,UAAU,CAACJ,CAAD,CAH3B;AAAA,wBAKGA;AALH,eAEOO,CAFP;AAAA;AAAA;AAAA;AAAA,oBADF;AASD,WAVA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAqBD;;GAzCQb,Q;;KAAAA,Q;AA2CT,eAAeA,QAAf","sourcesContent":["import { Button, Container, Row, Col } from \"react-bootstrap\";\nimport React, { useState } from \"react\";\n\n//本標籤管理\n//1.{allData:從index拿到的“全部”json資料}{setData:改變input的data}\n//2.狀態[catagories]把標籤分類(不重複歸類)\n//3.產生button\n//4.點選button分類時，setData(隸屬於index的狀態)\n\nfunction Catagory({ allData, setData  }) {\n\n  const allCategories = [\"all\", ...new Set(allData.map((v) => v.category))];\n  //把'all'放第一位，後面複製陣列\n  // var b = new Set(a.map((v) => v.category));\n  //new Set(v);(v是陣列，是獨立的，有相同值會被濾掉\n  const [catagories, setCatagory] = useState(allCategories);//純粹就是給buttom值\n\n  const filterItem = (category) => {\n    //(category)從category的button來的，是字串喔\n    if (category === \"all\") {\n      setData(allData);\n      return;\n    }\n    //category代表category標籤給的input\n    const newDate = allData.filter((v) => v.category === category);\n    //v.category(allData的一筆資料裏面的category屬性)等於category(我們給的參數)->會被濾“出來”\n    setData(newDate); //把data透過setData改變了\n  };\n\n  return (\n    <>\n      <Container>\n        <Row>\n          <Col>\n            {catagories.map((v, i) => {\n              return (\n                <Button\n                  variant=\"outline-success\"\n                  key={i}\n                  onClick={() => filterItem(v)}\n                >\n                  {v}\n                </Button>\n              );\n            })}\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default Catagory;\n"]},"metadata":{},"sourceType":"module"}