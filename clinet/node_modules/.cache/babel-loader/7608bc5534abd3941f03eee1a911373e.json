{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\WAIT-FOR-ME-main\\\\clinet\\\\src\\\\YIXUAN\\\\stores\\\\StoreIndex.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport List from \"./List\"; // import allData from \"./Fakejson.json\";\n// import allData from \"./MOCK_DATA.json\";\n\nimport Search from \"./Search\";\nimport Catagory from \"./Catagory\";\nimport { Container } from \"react-bootstrap\";\nimport axios from \"axios\"; //本標籤管理(11/1先用假資料)\n//1.Ｘ取得的json資料X(11/1 因為store的<Index>在rander時會遇到一開始無法取得資料去分配給category生成按鈕的情況)\n//2.分配給子標籤\n//3.掌管資料狀態\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Index() {\n  _s();\n\n  const [data, setData] = useState([]); //可變的資料\n\n  const [allData, setAllData] = useState([]); //不可變的整個資料庫的餐廳資料\n\n  const [isError, setIsError] = useState(false); //錯誤時(預設ｆ)\n\n  const [isLoding, setIsLoding] = useState(false);\n  console.log(allData);\n  console.log(data);\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoding(true);\n\n      try {\n        //執行\n        const rep = await axios.get('http://127.0.0.1:3001/page2');\n        setAllData(rep.data);\n        setData(rep.data);\n      } catch (error) {\n        //失敗時\n        setIsError(true);\n        console.log(error);\n      }\n\n      setIsLoding(false);\n    };\n\n    fetchData();\n  }, []); // useEffect(() => {\n  // axios.get('http://localhost:3001/page2').then((rep)=>{setAllData(rep.data)})\n  // }, [])\n\n  if (isLoding) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"LODING...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 24\n      }, this)\n    }, void 0, false);\n  }\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ERROR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 23\n      }, this)\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        allData: allData,\n        setData: setData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Catagory, {\n        allData: allData,\n        setData: setData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      dataList: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Index, \"+i2RhCtC/55GZeq9OjAGZG3mMmo=\");\n\n_c = Index;\nexport default Index; // ==============渲染順序問題尚未解決============================================\n// function Index() {\n//   const [allData, setAllData] = useState([]);\n//   const [data, setData] = useState(allData);\n//   useEffect(() => {\n//     axios.get('http://localhost:3001/page3').then((rep)=>{setAllData(rep.data)})\n//   }, [])\n//   console.log(data);\n//   return (\n//     <div>\n//       <Container>\n//         <Search allData={allData} setData={setData} />\n//         <Catagory  allData={allData} setData={setData}  />\n//       </Container>\n//       <List dataList={data}></List>\n//     </div>\n//   );\n// }\n// export default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/User/Desktop/WAIT-FOR-ME-main/clinet/src/YIXUAN/stores/StoreIndex.jsx"],"names":["React","useState","useEffect","List","Search","Catagory","Container","axios","Index","data","setData","allData","setAllData","isError","setIsError","isLoding","setIsLoding","console","log","fetchData","rep","get","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CACA;AACA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAGA;AACA;AACA;AACA;;;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC,CADe,CACsB;;AACrC,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC,CAFe,CAE4B;;AAC3C,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC,CAHe,CAG8B;;AAC7C,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,KAAD,CAAxC;AAIFgB,EAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AAGEP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,SAAS,GAAG,YAAW;AAC3BH,MAAAA,WAAW,CAAC,IAAD,CAAX;;AAGA,UAAI;AAAC;AACH,cAAMI,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAU,6BAAV,CAAlB;AAEAT,QAAAA,UAAU,CAACQ,GAAG,CAACX,IAAL,CAAV;AACAC,QAAAA,OAAO,CAACU,GAAG,CAACX,IAAL,CAAP;AAED,OAND,CAME,OAAOa,KAAP,EAAc;AAAC;AACfR,QAAAA,UAAU,CAAC,IAAD,CAAV;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD;;AACDN,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD,KAfD;;AAgBAG,IAAAA,SAAS;AACV,GAlBQ,EAkBN,EAlBM,CAAT,CAZe,CAgCb;AACA;AACA;;AAGF,MAAGJ,QAAH,EAAY;AAAC,wBAAM;AAAA,6BAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAF,qBAAN;AAA8B;;AAC3C,MAAGF,OAAH,EAAW;AAAC,wBAAM;AAAA,6BAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAF,qBAAN;AAA0B;;AACtC,sBACE;AAAA,4BACE,QAAC,SAAD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEF,OAAjB;AAA0B,QAAA,OAAO,EAAED;AAAnC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAW,QAAA,OAAO,EAAEC,OAApB;AAA6B,QAAA,OAAO,EAAED;AAAtC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAED;AAAhB;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAhDQD,K;;KAAAA,K;AAkDT,eAAeA,KAAf,C,CAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport List from \"./List\";\n// import allData from \"./Fakejson.json\";\n// import allData from \"./MOCK_DATA.json\";\nimport Search from \"./Search\";\nimport Catagory from \"./Catagory\";\nimport { Container } from \"react-bootstrap\";\nimport axios from \"axios\";\n\n\n//本標籤管理(11/1先用假資料)\n//1.Ｘ取得的json資料X(11/1 因為store的<Index>在rander時會遇到一開始無法取得資料去分配給category生成按鈕的情況)\n//2.分配給子標籤\n//3.掌管資料狀態\n\nfunction Index() {\n  const [data, setData] = useState([]);//可變的資料\n  const [allData, setAllData] = useState([]);//不可變的整個資料庫的餐廳資料\n  const [isError, setIsError] = useState(false)//錯誤時(預設ｆ)\n  const [isLoding, setIsLoding] = useState(false);\n\n\n\nconsole.log(allData);\nconsole.log(data);\n  \n\n  useEffect(() => {\n    const fetchData = async () =>{\n      setIsLoding(true)\n\n\n      try {//執行\n        const rep = await axios.get('http://127.0.0.1:3001/page2')\n        \n        setAllData(rep.data);\n        setData(rep.data);\n\n      } catch (error) {//失敗時\n        setIsError(true)\n        console.log(error);\n      }\n      setIsLoding(false)\n    }\n    fetchData()\n  }, [])\n\n    // useEffect(() => {\n    // axios.get('http://localhost:3001/page2').then((rep)=>{setAllData(rep.data)})\n    // }, [])\n\n     \n  if(isLoding){return<><h1>LODING...</h1></>}\n  if(isError){return<><h1>ERROR</h1></>}\n  return (\n    <div>\n      <Container>\n        <Search allData={allData} setData={setData} />\n        <Catagory  allData={allData} setData={setData}  />\n      </Container>\n      <List dataList={data}></List>\n    </div>\n  );\n}\n\nexport default Index;\n\n\n\n\n// ==============渲染順序問題尚未解決============================================\n// function Index() {\n//   const [allData, setAllData] = useState([]);\n//   const [data, setData] = useState(allData);\n  \n//   useEffect(() => {\n//     axios.get('http://localhost:3001/page3').then((rep)=>{setAllData(rep.data)})\n//   }, [])\n\n//   console.log(data);\n  \n\n\n\n//   return (\n//     <div>\n//       <Container>\n//         <Search allData={allData} setData={setData} />\n//         <Catagory  allData={allData} setData={setData}  />\n//       </Container>\n//       <List dataList={data}></List>\n//     </div>\n//   );\n// }\n\n// export default Index;\n\n\n\n"]},"metadata":{},"sourceType":"module"}